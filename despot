#!/usr/bin/env bash

mkdir -p pkg/src
PKG_LIST=$(ls pkg/src | tr " " "\n")

OPTION="$1"
PACKAGE="$2"
OVERFLOW="$3"

if [ -z "$OPTION" ]; then
	OPTION="--help"
fi

updater() {
	echo -n "updating despot repo..."
	git pull > /dev/null 2>&1
	echo -e " done\n"
	for l in $PKG_LIST; do
		echo "checking: $l"
		cd pkg/src/"$l"
		git pull
		echo
		cd ../../..
	done
}

remover() {
	if [ ! -z "$PACKAGE" ]; then
		if [ ! -z "$OVERFLOW" ]; then
			echo "ERROR: only one package updatable at a time"
			exit
		fi
		if [ ! -f pkg/repo/"$PACKAGE".bash ]; then
			echo "ERROR: draumaz has yet to write a build script for $PACKAGE"
			exit
		else if [ ! -e pkg/repo/"$PACKAGE" ]; then
			echo "ERROR: no sources for $PACKAGE in pkg/src"
			exit
		else
			bash pkg/repo/"$PACKAGE".bash uninstall
			echo "uninstalled."
		fi fi
	else
		echo "ERROR: no package name provided for removal."
	fi
}

installer() {
	if [ ! -z "$PACKAGE" ]; then
		if [ "$PACKAGE" == "-a" ] || [ "$PACKAGE" == "--all" ]; then
			echo -e "updating all packages\n"
			for l in $PKG_LIST; do
				if [ ! -f pkg/repo/"$l".bash ]; then
					echo "ERROR: no build script for $l available"
					continue
				fi
				bash pkg/repo/"${l}".bash build
			done
		fi
	else
		echo "ERROR: no package name provided for install"
		exit
	fi
	if [ ! -f pkg/repo/"$PACKAGE".bash ]; then
		echo "ERROR: draumaz has yet to write a build script for $2"
		exit
	else if [ ! -e pkg/repo/"$PACKAGE" ]; then
		echo "fetching sources for $PACKAGE"
		bash pkg/repo/"$PACKAGE".bash sources > /dev/null 2>&1
	fi fi
	bash pkg/repo/"$PACKAGE".bash build
	exit
}

meta_text() {
	case $1 in
		"v")
			echo "despot 0.01.3"
			;;
		"h")
			echo "./despot [arg]"
			echo ""
			echo "arguments:"
			echo "--help          | show this screen"
			echo "--install [PKG] | compile a package"
			echo "--list          | list all directories in pkg/src"
			echo "--remove [PKG]  | remove given package"       
			echo "--update        | git pull pkg/src & pkg/repo"
			echo "--version       | display current version of despot"
			echo ""
			;;
	esac
}

case "$OPTION" in
	"--version" | "-v")
		meta_text "v"
		;;
	"--help" | "-h")
		meta_text "h"
		;;
	"--list" | "-l")
		echo "$PKG_LIST"
		;;
	"--remove" | "-r")
		remover "$OPTION" "$PACKAGE" "$OVERFLOW"
		exit
		;;
	"--update" | "-u")
		updater
		;;
	"--install" | "-i")
		installer "$PACKAGE"
		;;
	*)
		echo "ERROR: unrecognized command"
		;;
esac
